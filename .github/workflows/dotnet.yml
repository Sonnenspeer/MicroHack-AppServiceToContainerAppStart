# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Deploy to Container App

on:
  workflow_dispatch:

permissions:
  id-token: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - uses: actions/checkout@v4

    - name: Get Latest Container Image Tag
      id: get_tag
      run: |
        TAG=$(az acr repository show-tags --name microhackregistry --repository microhackapp --orderby time_desc --output tsv --detail | head -n 1 | awk '{print $4}')
        NUMERIC_TAG=$(echo "$TAG" | grep -oE '[0-9]+')
        INCREMENTED_TAG=$((NUMERIC_TAG + 1))
        UPDATED_TAG=$(echo "$TAG" | sed "s/$NUMERIC_TAG/$INCREMENTED_TAG/")
        echo "image_tag=$UPDATED_TAG" >> $GITHUB_OUTPUT
    
    - name: Build and Push Image
      run: |
        az acr login --name microhackromancr --username ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }} &&
        docker build -t microhackromancr.azurecr.io/microhackapp:${{ steps.get_tag.outputs.image_tag }} -f Dockerfile . &&
        docker push microhackromancr.azurecr.io/microhackapp:${{ steps.get_tag.outputs.image_tag }}

    - name: Deploy to Container App
      uses: azure/container-apps-deploy-action@v2
      with:
        imageToDeploy: microhackromancr.azurecr.io/microhackapp:${{ steps.get_tag.outputs.image_tag }}
        acrUsername: ${{ secrets.ACR_USERNAME }}
        acrPassword: ${{ secrets.ACR_PASSWORD }}
        resourceGroup: MicroHack-AppServiceToContainerApp
        containerAppEnvironment: microhack-containerappenvironment-roman
        containerAppName: microhack-containerapp-roman
        targetPort: 8080
